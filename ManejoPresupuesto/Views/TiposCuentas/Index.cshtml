
@{
    ViewData["Title"] = "Tipos Cuentas";
}

<h1>Tipos de Cuenta</h1>
<h5>Prestamos, crédito, Ingresos ...</h5>

<a asp-action="Crear" class="btn btn-primary mb-3">Crear nuevo</a>

<table class="table">
    <thead>
        <tr>
            <th>Acciones</th>
            <th>Nombre</th>
        </tr>
    </thead>
    <tbody id="reordenable">
        @foreach (var tipoCuenta in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@tipoCuenta.Id" class="ids"/>
                    <a class=" btn btn-primary" asp-action="Editar" asp-route-id="@tipoCuenta.Id">Editar</a>
                    <a class=" btn btn-danger" asp-action="Borrar" asp-route-id="@tipoCuenta.Id">Borrar</a>
                </td>
                <td> @tipoCuenta.Nombre</td>
            </tr>
        }
    </tbody>
</table>

<!--
    Con la libreria de jQuery UI podemos arrastrar y reordenar elementos
    - en el css hemos añadidio cursor:move
    - en el layout hemos añadido el script de la libreria
-->

@section Scripts
{
    <script>
    const urlOrdenar='@Url.Action("Ordenar")'; //url donde esta el metodo Ordenar
    $(function(){
        $("#reordenable").sortable({
            stop: async function(e,ui){
                await actualizarOrdenes();
            }
        });

        async function actualizarOrdenes(){
            const ids = obtenerIdElementos();
            await enviarAlBack(ids);
        }
        function obtenerIdElementos(){
            const ids= $(".ids").map(function(){
                return $(this).val();
            }).get(); //este get lo convierte a un arreglo
            return ids;
        }
        async function enviarAlBack(ids){
            var data=JSON.stringify(ids);
            await fetch(urlOrdenar, {
                method: 'POST',
                body: data,
                headers:{
                    'Content-Type':'application/json'
                }

            })
        }
    })
    </script>
}
